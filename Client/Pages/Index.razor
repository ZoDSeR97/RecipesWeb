@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager Nav
@using RecipesWeb.Shared
@page "/"

<PageTitle>Index</PageTitle>

<h1 class="font-bold">Hello, world!</h1>

Welcome to your new app.

<EditForm Model="Query" OnValidSubmit="HandleSearch">
    <div class="form-floating mb-3">
        <InputText type="text" class="form-control" placeholder="Recipe Name or Ingredient" @bind-Value="Query.Name" />
        <label for="Name" class="form-label">Recipe Name or Ingredient</label>
        <ValidationMessage For="@(()=>Query.Name)" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (results == null)
{
    <p>Loading recipes...</p>
}
else
{
    <div className="grid grid-cols-3 gap-4">
        @{
            foreach (Recipe result in results)
            {
                <div className="flex flex-col bg-white relative cursor-pointer" @onClick="">
                    <img src={recipe.Image} />
                    <div className="flex items-center gap-1">
                        <AuthorizeView>
                            <Authorized>
                                <span @onClick="@(()=>Nav.NavigateTo("/"))">

                                </span>
                            </Authorized>
                            <NotAuthorized>
                                <span @onClick="@(()=>Nav.NavigateTo("/login"))">

                                </span>
                            </NotAuthorized>
                        </AuthorizeView>
                        <h3>{recipe.Name}</h3>
                    </div>
                </div>
            }
        }
    </div>
}

<SurveyPrompt Title="How is Blazor working for you?" />

@code{
    private SearchName Query = new SearchName();
    private List<Recipe> results = new List<Recipe>();

    protected override async void OnInitialized()
    {
        base.OnInitialized();
        var response = await Http.GetFromJsonAsync<Recipe[]>("api/Recipe");
        if(response != null)
            results = response.ToList();
    }

    public async void HandleSearch()
    {
        var findRecipe = await Http.GetFromJsonAsync<Recipe[]>($"api/Recipe/{Query.Name}");
        var findRecipeWithIngredient = await Http.GetFromJsonAsync<Recipe[]>($"api/Ingredient/{Query.Name}");
        if (findRecipe != null)
            results = findRecipe.ToList();
        if (findRecipeWithIngredient != null)
            findRecipeWithIngredient.ToList().ForEach(recipe => results.Add(recipe));
    }
}
