@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">RecipesWeb</a>
        <button title="Navigation menu" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="oi oi-plus" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="register">
                        <span class="oi oi-plus" aria-hidden="true"></span> Sign up
                    </NavLink>
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="btn btn-danger" @onclick="Logout">Logout</div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : "";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public async void Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.clear", null);
        await AuthStateProvider.GetAuthenticationStateAsync();
        Nav.NavigateTo("/");
    }
}
